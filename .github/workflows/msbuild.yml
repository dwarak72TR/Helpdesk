# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Sparse checkout
      shell: bash
      run: |
        REPO="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        BRANCH="${GITHUB_REF/#refs\/heads\//}"

        # Following code is based on logs of actions/checkout@v, with sparseCheckout stuff inserted in the middle
        echo "Syncing repository: $GITHUB_REPOSITORY"
        echo "Working directory is '$(pwd)' GITHUB_WORKSPACE=$GITHUB_WORKSPACE BRANCH=$BRANCH"
        git version
        git init $GITHUB_WORKSPACE
        git remote add origin https://github.com/$GITHUB_REPOSITORY
        git config --local gc.auto 0
        # Now interesting part
        git config core.sparseCheckout true
        # Add here contents of sparse-checkout line by line
        echo "HelpdeskMVC" >> .git/info/sparse-checkout
        # echo ... 
        git -c protocol.version=2 fetch --no-tags --prune --progress --depth=10 origin +${GITHUB_SHA}:refs/remotes/origin/${BRANCH}
        git checkout --progress --force -B $BRANCH refs/remotes/origin/$BRANCH

    - name: check current dir
      run: dir
    - name: check current dir
      run: |
        cd HelpdeskMVC
        dir
      
